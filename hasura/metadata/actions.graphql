type Mutation {
  CreateCognitoUser (
    email: String!
    password: String!
    role: String!
    user_id: Int!
  ): CreateUserResponse
}


type Mutation {
  DeleteCognitoUser (
    email: String!
    user_id: Int!
  ): DeleteUserResponse
}


type Mutation {
  InsertEvents (
    date_times: [dateTimes]
  ): [EventsResponse]
}


type Mutation {
  UpdateCognitoUser (
    email: String!
    user_id: Int!
    current_role: String!
    new_role: String!
  ): UpdateUserResponse
}




input SupervisorInput {
  supervisor_id : Int!
}

input SupervisorData {
  data : SupervisorInput!
}

input recurrence {
  day : Int!
  week : Int
  interval : Int!
  name : String!
  frequency : String!
  end_date : date
  start_time : time!
  end_time : time!
}

input dateTimes {
  project_id : Int!
  recurrence_id : Int
  start_date : date!
  new_recurrence : Boolean!
  end_date : date
  previous_end_date : date
  recurrence : recurrence
}

type CreateUserResponse {
  status : String!
  message : String!
}

type UpdateUserResponse {
  status : String!
  message : String!
}

type DeleteUserResponse {
  status : String!
  message : String!
}

type EventsResponse {
  status : String!
  message : String!
}

